services:
    strapi:
        image: ghcr.io/iotechpis/tearfil-render-api:release
        restart: always
        env_file:
            - .env
        ports:
            - 59967:1337
        networks:
            - tearfil_render
        volumes:
            - strapi_uploads:/usr/src/app/public/uploads
        healthcheck:
            test: ["CMD", "node", "-e", "require('http').get('http://localhost:1337/_health', (res) => { process.exit(res.statusCode === 200 || res.statusCode === 204 ? 0 : 1) }).on('error', () => process.exit(1))"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            postgres:
                condition: service_healthy
                restart: true

    postgres:
      image: postgres:17
      restart: always
      ports:
        - "59966:5432"
      networks:
        - tearfil_render
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "${POSTGRESQL_USERNAME}", "-d", "${POSTGRESQL_DATABASE}"]
        interval: 15s
        timeout: 30s
        retries: 60
      environment:
        TZ: ${TZ}
        PUID: ${PUID}
        PGID: ${PGID}
        POSTGRES_DB: ${POSTGRESQL_DATABASE}
        POSTGRES_USER: ${POSTGRESQL_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      volumes:
        - postgres_data:/var/lib/postgresql/data

volumes:
    postgres_data:
    strapi_uploads:

networks:
    tearfil_render:
